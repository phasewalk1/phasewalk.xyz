
{
    
    
    
    
        
        
        
    
        
        
            
                
            
        
        
    
        
        
            
                
            
        
        
    
    "pages": [{"date":"2023-06-29","image":"","imageAlt":"","link":"https://example.com/about/about/","summary":"","tags":[],"text":"","title":"About"},{"date":"2023-06-28","image":"/hnc.png","imageAlt":"","link":"https://example.com/posts/hnc/","summary":"Music-based Recommendation Systems in production","tags":["ML","Music"],"text":" this document is an evolving draft.\nmuch of the thought process behind this article is unique to our application, and primarily, the task of integration with our backend architecture. this document concerns itself with laying out proposed implementation architectures and discussing how they would fit into our existing application. some of this information might not be relevant to you if you\u0026rsquo;re only interested in learning about mbrs’s (music based recommendation systems) and less about designing and deploying the pipeline that integrates into a distributed system. if you would just like to read about mbrs\u0026rsquo;s, here are some relevant links that i recommend (no pun intended):\nrecommendation systems: fundamentals fundamentalist approaches do not involve training a model, they operate purely by data-driven algorithms.\ncollaborative filtering\nmatrix factorization\nmodern approaches: i consider an approach to be modern if it blends fundamental approaches with deep learning models.\nneural collaborative filtering\nalso alluded to in the collaborative filtering article hybrid neural collaboration\ni don\u0026rsquo;t think they\u0026rsquo;re actually called this, i just thought it sounded cool. it\u0026rsquo;s a hybrid approach because it combines the ideas of collaboration with content-based recommendation. so, fuck it. i\u0026rsquo;m coining the term hybrid neural collaboration. the approach is also described in further detail in a survey of collaborative filtering techniques. there are many more modern implementations (crnn\u0026rsquo;s using computer vision on spectrogram images) and papers i could link to here, and i plan on updating this draft routinely; these are just the most relevant to us now.\ni think the term that best encapsulates the approach i’ve arrived at is hybrid neural collaboration. it’s a hybrid approach because it combines collaborative filtering with content-based filtering, and implements both components in separate neural networks. this is, by no means, a novel approach — see here — rather, a term for describing the entire system pipeline in practice.\nneural collaborative filtering and the user-item transaction matrix the model architecture we have discussed previously (many months ago) was the crnn content-based filtering approach. this approach is where we generate spectrogram images that embed information about the content of the item, and rely on computer vision in the convolutional layers to learn how to extract certain features from the raw wave information present in the spectrograms. this would introduce added overhead into our system, because we would likely have to set up processing queues to continuously analyze every new item that is written to the s3 bucket, then we\u0026rsquo;d need to store the spectrograms somewhere too.\nwe can avoid introducing compute overhead and processing queue complexity by ignoring feature extraction and signal processing altogether. ncf models are trained on simple vectors that contain user-item interaction metadata, and they learn the latent factors that represent the similarities between different users. so if user1 likes x, y, and z, and user2 likes x and y, they are likely to be recommended z.\nan example of a structure that acts as a single point in the training input data for an ncf could look like this:\n// the model learns to group users into similar taste categories, // and can recommend users new items based on distance in the // vector space (euclidean or cosine similarity; usually) struct useritemmetric { int user_id; int song_id; int listen_count; }; sparsity and the cold start problem - where hybrid comes in a hybrid collaboration model introduces content metadata into the context of the ncf. this helps combat the cold start problem wherein sparsity in the dataset can make it impossible to serve good recommendations to new users (sometimes called context-aware collaborative filtering).\nsparsity happens when there are many items in the dataset and most users have only interacted with a few items (implies many zeroes in the user-item-transaction matrix). this applies to our application.\nin order to tackle this problem and ensure our engine is useful for new users too, we must feed the model some context on the content of the items during training time. these can be discussed and tuned to what we think works best. they do not need to be raw features such as are commonly extracted from signal processing, rather, they can be simple metadata features (e.g. title, author, length, tags, etc.).\ndata normalization and context-injection now that we’ve introduced the basic concepts of the hybrid neural collaboration architecture, we can discuss applying it from the top down. as we mentioned above, we need both the user-item interaction metrics and metadata content from each item.\nsince i’m not sure what the schema for the song records is now, just humor me with this hypothetical example of what types of metadata we could use.\nstruct song { string title; string release; string artist_name; string year; }; now, to train the model, we‘ll create dataframes over the two datasets. we’ll then merge the two so that they look something like this: ![[pasted image 20230628025222.jpg]]\nsince the listen_count field is a highly variant field (can range from 0 to 1,000+) we will want to normalize it across the dataset. we can do this using zscore normalization which is simple in numpy. we will also likely want to drop any rows with abnormally high play counts (above 20,000 for example) before performing normalization so that artificially inflated values don’t skew the deviation maliciously.\nonce we have this normalized and merged dataframe, we have successfully completed the preprocessing stage and we are ready to train the model.\nncf - model architecture cbf - model architecture ","title":"Hybrid Neural Collaboration"},{"date":"2023-05-19","image":"/moving-formation2.gif","imageAlt":"","link":"https://example.com/posts/my_window/","summary":"There's this noise I always hear","tags":["MISC"],"text":"last night, while laying in bed, i couldn\u0026rsquo;t help but pick up on a low audible frequency. the second night in a row. \u0026ldquo;what is that?\u0026rdquo;, i wonder\u0026ndash;my anxiety beginning to multiply. the second night in a row, but far from the second time in all. i hear this vibration, coming from what appears to be, just outside my window. my limbs, tired from the day of labor; my bones, weak from the assaulting resonance that leaves me feeling uneasy.\ni finally position myself upright in bed. it\u0026rsquo;s 3:04 am, why is there light in the sky? my left foot reaches the ground first, but when both feet make contact, i begin slipping through the floor.\ni would fall for some time, attempting to scream but only releasing the muffled sounds of a drowning man. why is this happening to me?\nstill falling, i start to think about that noise again. that eerie, natively offputting tone that drove my body here. it manipulated me into placing my feet exactly so, where it\u0026rsquo;s anomalistic nature must\u0026rsquo;ve ensnared me. caught in this bind of shifting space, folding inward on myself until i no longer recognize the thoughts circling my own temple.\nbut it\u0026rsquo;s at this point\u0026ndash;at this point, i broke through to the other side. and that other side was just behind my window.\n","title":"My Window"}]
}

